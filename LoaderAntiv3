--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bk,bk,bk)local bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy=104,75,94,94,33,75,89,98,44,18,50,83,26,64,53,91,74,36,79,39,37,68,33,12,42,29,98,93,52,68,46,77,27,18,90,66,15,26,14,70,10,59,17,73,14,66,18,90,93,83,99,40,89,68 while bk~=78 do if bl<=781 then if bl<=362 then if bl<=195 then if bl<=123 then if bl<114 then bl=123 bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy=nil else cl=string.byte bl=144 end else if bl<=144 then do cg=string.char end bl=179 else if bl<190 then bl=195 cx=string.sub else bl=236 ca=string.gsub end end end else if bl<=284 then if bl>=259 then if bl>262 then bl=304 bq=table.insert else bl=284 do ch=table.concat end end else bl=259 bx=string.rep end else if bl>=325 then if bl<355 then bo=(getfenv or function()return _ENV end)bl=362 else cr=setmetatable bl=396 end else cf=math.ldexp bl=325 end end end else if bl>=589 then if bl<=661 then if bl>=613 then if bl<658 then ce=tonumber bl=661 else bl=704 br={}end else cp=(unpack or table.unpack)bl=613 end else if bl<=704 then for bk=0,255 do br[bk]=cg(bk);end bl=732 else if bl<774 then bs=ca('','..',function(bk,bq,bq,bq,bq)return br[ce(bk,16)]end)bl=781 else do bn={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,l,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,n,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,p,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,z,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,g,9,},{7,6,5,4,3,2,1,0,15,14,bd,12,11,10,9,bg,},{8,9,10,11,12,13,14,a,0,1,2,3,4,5,ba,7,},{9,8,11,10,13,v,15,14,1,0,3,2,5,m,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{i,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,d,9,10,11,be,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,c,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}end bl=811 end end end else if bl>=457 then if bl>=500 then if bl<537 then bl=542 bm=math.abs else bl=589 bw=math.floor end else bz=(function(a,c,c,c,c)if'number'==cn(a)then return true else return false end end)bl=500 end else if bl<428 then cc=select bl=433 else cn=type bl=457 end end end end else if bl>=1155 then if bl<=1286 then if bl<=1195 then if bl<1190 then cs=function()local a,c a,c=cl(bs,bu,(bu+2))bu=(bu+2);return((c*256)+a);end bl=1195 else cd=function()local a,c,d,g,i,l,m,n=65,64,64,56,68,44,36,34,64,94,88,90,62,27,23,87,73,27 while a~=36 do if c<=179 then if c<=93 then if c<87 then c=93 d,g,i,l,m,n=nil else m=cq()c=109 end else if c>=149 then if c<172 then c=179 do if((m==0 and d==bj))then do return 0 end end end else i=((-j)^cm(31,d,1))c=197 end else d=cq()c=149 end end else if c<=286 then if c>=240 then if c>245 then n=q c=308 else g=(cm(0,d,o)*4294967296+m)c=286 end else c=240 l=cm(20,d,11)end else if c>=349 then if c>352 then a=36;else c=386 do return(i*(2^(l-1023))*(g/by+n))end end else if u==l then if 0~=g then l=1 n=0 else return(i*0)end elseif 2047~=l then else if bf==g then do do return(i*(0/0))end end else do return(i*(1/0))end end end c=349 end end end end end bl=1224 end else if bl<=1224 then ct=function(a,a)local a,c,d,g=65,70,42,41,84,22,34,34,28,25,91,51,81,39,30 while a~=33 do if c<=145 then if c>=104 then if c>111 then c=192 g=bs:sub(bu,(bu+d-1))else c=145 d=cq()end else c=104 d,g=nil end else if c<=192 then c=234 bu=(bu+d);else if c<268 then c=274 do return g;end else a=33;end end end end end bl=1244 else if bl>1248 then bl=1318 cw={}else cb=function(...)return{...},cc('#',...)end bl=1286 end end end else if bl>=1404 then if bl>=1450 then if bl>1452 then break else bl=1476 do return bt(ck(bo()),{},bo())();end end else bt=function(a,c,d,g,g)local g,i,j,l,m do l=a[64]end g=a[50]do i=bp end j=a[52]m=a[180]do return function(...)local a,i,n,o,p,q,u,v,z do u=1 end i=-1 v=-1 do o={}end z={...}n=(cc('#',...)-1)q={}p={}for v=0,n do do if(not(v<l))then o[(v-l)]=z[(v+1)];else do p[v]=z[(v+1)];end end;end end;a=(n-l+1)while true do local a,l,n,o,v,z,ba,bd,be,bf be=g[u]bd=be[182]do z=be[58]end n=be[119]v=be[69]do a=be[152]end o=be[125]l=be[139]bf=be[4]do ba=be[164]end do if not(bd>25)then if not(bd<13)then if not(be[182]<19)then if not(bd<22)then if not(be[182]<24)then do if(bd<25)then if p[n]then u=bf;end;else local g,l,o,v,z do v=n end do z=a end g=(v+2)o={p[v](p[v+e],p[g])}for e=1,z do p[(g+e)]=o[e]end l=p[(v+3)]if l then p[g]=l else u=bf;end;end end else if(be[182]>22)then p[be[119]]=d[j[bf]];else do p[n][j[bf]]=j[be[152]];end end end else do if not(bd<20)then if 20==bd then local e,g,l g=be[119]l={p[g](cp(p,g+1,i))}do e=0 end do for o=g,a do e=(e+1);p[o]=l[e];end end else local e e=n p[e](p[(e+s)])end else do p[n]=(j[bf]+p[be[152]]);end end end end else do if not(be[182]>15)then do if not(bd>13)then local e do e={}end do if(#q>0)then for g=1,#q do local l l=q[g]for g=0,#l do local o,s,v o=l[g]v=o[1]s=o[2]if(v==p and s>=0)then e[s]=v[s]o[1]=e end end end end end return be[a];else if(bd<15)then do return p[n]end else p[n]();end end end else do if not(bd>16)then p[n][p[bf]]=p[a];else if not(bd~=17)then p[n]=(p[bf]%j[a]);else do p[n]=j[bf]end end end end end end end else if not(bd>5)then if not(be[182]<3)then if not(bd>3)then p[n]=p[bf][j[a]];else do if(bd>4)then if((p[n]<p[a]))then u=bf;end;else do for e=n,bf do p[e]=nil;end;end end end end else do if not(bd<1)then if not(bd~=1)then p[be[119]]=p[be[4]][p[a]];else local e,g,l,o o=n g,l=cb(p[o](cp(p,(o+1),bf)))i=(l+o-1)do e=0 end for l=o,i do e=(e+1);do p[l]=g[e];end end;end else j=bp[be[119]](j)end end end else if not(bd>8)then if not(be[182]>6)then local e,g g=n do e={}end for l=1,#q do local o do o=q[l]end for l=0,#o do local s,v,z s=o[l]z=s[1]v=s[2]if(z==p and v>=g)then e[v]=z[v];do s[1]=e;end end;end;end;else if(bd>7)then do p[be[119]]=c[bf];end else local e,g,l e=m[bf]g=nil l={}g=cr({},{__index=function(o,o)local o=l[o];return o[1][o[2]];end,__newindex=function(o,o,s)local o=l[o]o[1][o[2]]=s;end;});for o=1,a do local s s=be[29][o]if s[1]then do l[(o-1)]={p,s[w],nil,nil};end else l[(o-1)]={c,s[2],nil,nil,nil};end;do q[(#q+1)]=l;end end;do p[n]=bt(e,g,d);end end end else if not(bd<11)then if not(bd~=bi)then if(p[a]~=p[n])then u=bf;end;else p[n]=(p[bf]*p[a]);end else if(bd<10)then local c c=n p[c](cp(p,(c+1),be[4]))else p[n]=(p[bf]+j[a]);end end end end end else do if not(be[182]>38)then if not(bd<32)then if not(be[182]>34)then if not(bd>32)then local c,e,g e=n do c=p[(e+2)]end do g=(p[e]+c)end p[e]=g;if((c>0))then if(not(g>p[e+1]))then do u=bf;end do p[(e+3)]=g;end end elseif(not(g<p[e+1]))then do u=bf;end p[(e+3)]=g;end else if(bd>33)then while(p[be[119]]==j[a])do u=bf;break end else local c c=n do p[c]=p[c]();end end end else if not(bd<37)then if not(bd~=37)then local c,e do e=n end c={}if(#q>0)then for g=1,#q do local l l=q[g]for g=0,#l do local o,q,s q=l[g]s=q[1]o=q[2]if(s==p and o>=0)then c[o]=s[o]do q[1]=c end end end end end return cp(p,e,i);else local c do c=n end p[c]=p[c](cp(p,c+1,i));end else if 35==bd then p[n]=(p[bf]-p[a]);else do if(not(p[n]==j[a]))then u=bf;end;end end end end else if not(bd>28)then if not(be[182]>26)then local c do c=n end p[c]=p[c](cp(p,c+1,bf));else if(bd<28)then p[be[119]]=#p[bf];else p[be[119]]={};end end else if not(be[182]>29)then local c,e e=be[4]c=p[e]for g=(e+1),a do do c=(c..p[g]);end end;do p[n]=c;end else if not(be[182]~=30)then p[n]=(p[bf]*j[a]);else u=bf;end end end end else if not(bd>b)then if not(bd>41)then if not(bd>39)then local b,c,e b=be[119]c=p[b]e=p[(b+2)]if((e>0))then if((c>p[b+1]))then u=be[4];else p[(b+3)]=c;end elseif((c<p[b+k]))then do u=bf;end else p[(b+3)]=c;end else if(bd>40)then p[be[119]][j[bf]]=p[a];else do p[be[119]]=h;end end end else if not(bd<44)then if not(bd~=44)then local b b=n do return p[b](cp(p,(b+1),be[f]))end;else p[n]=(p[bf]/j[a]);end else if 42==bd then do if((j[n]<p[a]))then u=bf;end;end else if not p[n]then u=bf;end;end end end else if not(bd>48)then if not(bd<47)then if 47==bd then local b do b=n end p[b]=p[b](p[b+1]);else local b,c b=n c=p[bf]p[(b+1)]=c;p[b]=c[j[a]];end else p[n]=(p[bf]+p[a]);end else if not(bd>50)then do if(bd>49)then p[be[119]]=(j[bf]*p[a]);else do p[be[119]]=bt(m[bf],nil,d);end end end else if not(bd~=51)then p[n]=p[bf];else local a,b,c,d d=be[119]b,c=cb(p[d](p[(d+1)]))do i=(c+d-1)end do a=0 end for c=d,i do a=(a+x);p[c]=b[a];end;end end end end end end end end u=(u+1);end;end;end end bl=1450 end else if bl<=1318 then bl=1337 do ck=function(a,b,b)local b,c,d,e,f,g,h,i=72,33,94,57,46,23,52,55,18,79,68,40,27,29,62,94,18,99,71,65,31,22,41,28 while b~=53 do if c>=329 then if c<=426 then if c>=386 then if c>395 then f={}c=451 else e=cq()c=426 end else if c>332 then c=386 i[180]=h;else c=350 for j=1,cq()do do h[j-1]=ck();end end end end else if c<=475 then if c<467 then c=475 for j=1,e do local k,l,m,n=80,68,24,10,53,44,12,46,58,72,30,53,84 while k~=34 do if l<=124 then if l<=68 then l=96 m,n=nil else if l>105 then l=152 n=nil else m=ci()l=124 end end else if l<=152 then l=178 if(2==m)then n=(not(ci()==0));elseif(3==m)then do n=cd();end elseif(not(m~=1))then n=ct();elseif(t==m)then n=a[ct()];end;else if l<209 then l=213 f[j]=n;else k=34;end end end end end else i[52]=f c=496 end else if c>=512 then if c>521 then b=53;else c=556 return i;end else c=512 i[r]=ci();end end end else if c<=134 then if c>=98 then if c<127 then do h={}end c=134 else i={}c=182 end else if c>36 then c=98 d={}else d,e,f,g,h,i=nil c=77 end end else if c<=222 then if c>188 then for a=(#cw+1),(#cw+g)do local b,e,f,h,j=90,63,24,45,31,34,55,33,76,80,11,28,44,50,74,70,52,42,21,86,38,77,87 while b~=48 do if e>=303 then if e<=383 then if e<=340 then if e<332 then e=340 do f[119]=bv(h,3,11);end else f[69]=bv(h,12,20);e=360 end else if e>363 then e=410 f[4]=bv(j,12,33);else e=383 do f[152]=bv(h,21,29);end end end else if e>=495 then if e>503 then break else e=531 cw[a]=f;end else if e>413 then e=495 f[164]=-f[152]else e=446 f[139]=-f[119]end end end else if e>=193 then if e<=210 then if e<207 then e=210 j=cq()else f[125]=ci();e=251 end else if e>254 then e=303 f[182]=bv(j,1,11);else f[141]=bv(h,1,2);e=280 end end else if e>=132 then if e>139 then h=cq()e=193 else e=176 f[58]=ci();end else if e>72 then e=132 f={}else f,h,j=nil e=96 end end end end end end c=255 else g=cq()c=222 end else if c>261 then c=329 i[50]=d;else c=303 do for a=1,cq()do local b,c,e,f,g,h=85,45,46,31,57,55,75,35,66,54,91,27,25,81,63,71,74,84,24,98,18,66,12,85,60 while b~=45 do if c>=345 then if c>=448 then if c<=477 then if c>453 then c=516 do g[139]=-g[119]end else c=477 g[125]=bv(f,12,bh);end else if c<=516 then c=548 g[164]=-g[152]else if c<557 then c=566 d[a]=g;else b=45;end end end else if c<=373 then if c<368 then c=373 g[182]=bv(h,1,11);else g[119]=bv(f,3,11);c=399 end else if c>401 then c=448 g[152]=bv(f,21,29);else c=426 g[4]=bv(h,12,33);end end end else if c>=190 then if c<=219 then if c>198 then f=cq()c=238 else c=219 do if not(ci()~=1)then for a=1,ci()do g[29][a]={ci()==0,cq()}end end end end else if c>=279 then if c>287 then g[141]=e c=345 else e=bv(f,1,2)c=312 end else c=279 do h=cq()end end end else if c>=112 then if c<150 then g[y]=ci();c=153 else c=190 g[29]={};end else if c>50 then g={{},nil,nil,nil,nil}c=112 else e,f,g,h=nil c=71 end end end end end end end end end end end end end end else if bl>1344 then cj={}bl=1404 else bl=1362 do bp={}end end end end end else if bl<=923 then if bl>=872 then if bl<=872 then cu={[0]=1}bl=908 else if bl<920 then do cv=2 end bl=923 else bl=947 for a=1,31 do cu[a]=cv cv=(cv*2)end end end else if bl>813 then do by=(2^52)end bl=872 else bl=854 do co=''end end end else if bl<=1029 then if bl<=947 then bl=991 cm=function(a,b,c,d,d)local d,e,f=72,36,21,59,24,82,20,95,65,32,55,67,89,63,15 while d~=32 do if e>=120 then if e<=120 then e=137 f=(f-f%1)else if e<151 then e=153 do return f end else break end end else if e>=53 then if e<83 then f=nil e=92 else do f=((b/cu[a])%cu[c])end e=120 end else f=nil e=53 end end end end else if bl<1023 then cy=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>bc do local e,f=a%16,b%16 c=c+bn[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)bl=1029 else bv=function(a,b,c,d,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end bl=1067 end end else if bl<=1067 then bu=1 bl=1108 else if bl>1116 then bl=1155 ci=function()local a do a=cl(bs,bu,bu)end bu=(bu+bb);return a;end else bl=1129 cq=function()local a,b,c,d d,a,b,c=cl(bs,bu,(bu+3))bu=(bu+4);return((c*16777216)+(b*65536)+(a*256)+d);end end end end end end end end end)(15,45,3,8,1,4,8,nil,11,1,1,9,4,5,20,4,1,64,1,0,0,12,2,1,58,15,6,1,0,13,4,0,8,20,11,0)
