--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,w,w)local w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=114,43,39,14,64,54,27,12,38,15,49,95,30,95,10,15,14,92,42,70,23,90,94,43,39,28,51,50,27,84,23,47,68,75,28,19,14,40,19,69,55,82,64,57,96,35,41,57,40,76 while w~=80 do if x>=655 then if x<=964 then if x>=795 then if x<=855 then if x>=840 then if x<853 then x=855 cg=(bit_lib and bit_lib.bxor or function(cl,cm)cl=cl%(2^32)cm=cm%(2^32)local cn,co=0,1 while cl>0 and cm>0 do local cp,cq=cl%16,cm%16 cn=cn+bg[cp+1][cq+1]*co cl=(cl-cp)/16 cm=(cm-cq)/16 co=co*16 end cn=cn+cl*co+cm*co return cn end)else bj=function(cl,cm,cn,co)local co co=((cl/2^(cm-1))%2^((cn-1)-(cm-1)+1))return(co-co%o);end x=896 end else do bu=function(o,cl,cm,cn,cn)local cn,co,cp=44,36,21,50,54,25,84,43,23,66,99,32 while cn~=34 do if co<=85 then if co<=36 then co=55 cp=nil else if co>59 then co=124 cp=((cl/ck[o])%ck[cm])else cp=nil co=85 end end else if co<=124 then co=149 cp=(cp-cp%1)else if co>152 then break else co=192 return cp end end end end end end x=840 end else if x>=937 then if x<960 then x=964 bv=function()local o,cl,cm,cn o,cm,cl,cn=ba(ca,bb,(bb+3))do bb=(bb+4);end return((cn*16777216)+(cl*65536)+(cm*256)+o);end else bl=function()local o o=ba(ca,bb,bb)bb=(bb+p);return o;end x=1004 end else bb=1 x=937 end end else if x<=687 then if x>657 then do ce=(2^52)end x=720 else x=687 z=''end else if x<=720 then x=735 ck={[0]=1}else if x<751 then bk=2 x=757 else x=795 do for o=1,31 do ck[o]=bk bk=(bk*2)end end end end end end else if x<=1084 then if x>=1051 then if x>=1069 then if x>1071 then x=1099 bo={}else x=1084 bq=function(...)do return{...},cb('#',...)end end end else bf=function(o,o,o,o)local o,p,cl,cm=41,64,77,89,91,49,72,59,96,87,77,36,44 while o~=31 do if p>=148 then if p>=168 then if p>171 then o=31;else p=217 return cl;end else p=168 bb=(bb+cm);end else if p>=98 then if p<114 then p=118 cm=bv()else cl=ca:sub(bb,(bb+cm-1))p=148 end else p=98 cl,cm=nil end end end end x=1069 end else if x>1010 then x=1051 bx=function()local o,p,cl,cm,cn,co,cp,cq=53,73,37,51,88,80,11,55,97,84,23,40,14,67,36,10,16,84,74 while o~=42 do if p>=237 then if p<=276 then if p<=237 then cp=bu(20,co,11)p=254 else if p>261 then p=314 cm=1 else do cq=(bu(0,co,20)*4294967296+cn)end p=276 end end else if p<=314 then p=343 if not(cp~=0)then if 0~=cq then cp=1 cm=0 else return(cl*0)end elseif 2047~=cp then else if not(cq~=0)then do return(cl*(0/0))end else return(cl*(h/0))end end else if p>352 then o=42;else p=378 return(cl*(2^(cp-1023))*(cq/ce+cm))end end end else if p<=119 then if p<110 then cl,cm,cn,co,cp,cq=nil p=119 else p=163 do cn=bv()end end else if p>=198 then if p>207 then cl=((-1)^bu(31,co,1))p=237 else p=221 do if((cn==0 and co==0))then return 0 end end end else co=bv()p=198 end end end end end else x=1033 y=function()local h,o do h,o=ba(ca,bb,(bb+2))end bb=(bb+2);return((o*j)+h);end end end else if x>=1176 then if x<=1176 then bc=function(h,j,o,p,p,p)local p,cl,cm,cn,co do cm=be end cn=h[124]cl=h[166]p=h[89]co=h[63]return function(...)local h,cm,cp,cq,cr,cs,ct,cu,cv ct=1 cr=-1 cp=-1 do cu={}end cq={...}do cv=(cb('#',...)-1)end cs={}h={}for cp=0,cv do do if(not(cp<co))then cu[(cp-co)]=cq[(cp+1)];else h[cp]=cq[(cp+1)];end;end end;cm=(cv-co+1)do while true do local cm,co,cp,cq,cu,cv,cw,cx,cy,cz co=cl[ct]cy=co[191]cw=co[158]cp=co[90]cq=co[96]cv=co[56]cu=co[115]cm=co[m]cx=co[114]cz=co[103]if not(cy>25)then if not(cy>12)then if not(co[191]>5)then if not(cy>2)then if not(co[191]>0)then h[cp]=nil;else do if 1==cy then h[co[90]]=(p[cx]*h[cv]);else h[cp][p[co[114]]]=p[co[56]];end end end else if not(cy<4)then if(cy>4)then local m,cl,cm do cl=cp end cm=h[(cl+2)]m=(h[cl]+cm)h[cl]=m;if((cm>0))then do if(not(m>h[cl+1]))then ct=cx;do h[(cl+3)]=m;end end end elseif(not(m<h[cl+1]))then ct=cx;h[(cl+3)]=m;end else if((h[cp]<h[co[56]]))then ct=cx;end;end else h[cp]=(h[cx]+h[co[56]]);end end else do if not(cy>8)then if not(cy>6)then local m m=co[90]h[m](cd(h,(m+1),cx))else do if(cy>7)then while not h[cp]do ct=cx;break end else do ct=cx;end end end end else do if not(cy>10)then do if 9==cy then h[cp]();else h[co[90]]=h[co[114]];end end else if(co[191]>11)then for m=co[90],cx do do h[m]=nil;end end;else h[co[90]]=(h[cx]/p[cv]);end end end end end end else if not(cy<19)then if not(cy>21)then if not(co[191]<20)then if(cy>20)then local m,cl m=cx cl=h[m]for cm=(m+1),cv do cl=(cl..h[cm]);end;h[cp]=cl;else if h[cp]then ct=cx;end;end else h[co[90]]=(h[cx]*p[cv]);end else if not(co[191]>23)then if(cy>22)then h[cp]=j[co[114]];else do p=be[cp](p)end end else if(co[191]>24)then local m m=cp h[m]=h[m](cd(h,m+1,cr));else h[cp]=p[cx]end end end else if not(cy>15)then if not(cy>13)then local m,cl m=cp do cl={}end if(#cs>0)then for cm=1,#cs do local cq cq=cs[cm]do for cm=0,#cq do local cu,cw,cz cz=cq[cm]cw=cz[1]cu=cz[g]if(cw==h and cu>=0)then cl[cu]=cw[cu]cz[1]=cl end end end end end do return cd(h,m,cr);end else if(cy<15)then local g,m,cl,cm,cq m=co[90]cl=cv do cq=(m+2)end g={h[m](h[m+1],h[cq])}for cu=1,cl do do h[(cq+cu)]=g[cu]end end cm=h[(m+3)]if cm then do h[cq]=cm end else ct=cx;end;else h[cp][p[cx]]=h[cv];end end else if not(cy>16)then if(not(h[co[90]]==p[cv]))then ct=cx;end;else do if(cy>17)then do h[cp]={};end else while((p[cp]<h[cv]))do ct=cx;break end end end end end end end else if not(cy>c)then do if not(cy<32)then if not(cy<35)then do if not(cy>36)then do if(cy>35)then local c,g c=cp g=h[co[114]]h[(c+1)]=g;h[c]=g[p[cv]];else local c,g,m m=cn[cx]do g=nil end c={}do g=cf({},{__index=function(cl,cl)local cl=c[cl];return cl[1][cl[2]];end,__newindex=function(cl,cl,cm)local cl=c[cl]cl[1][cl[2]]=cm;end;});end do for cl=1,co[56]do local cm cm=co[33][cl]if cm[1]then c[(cl-1)]={h,cm[2],nil};else c[(cl-1)]={j,cm[2],nil,nil,nil,nil};end;cs[(#cs+1)]=c;end;end h[cp]=bc(m,g,o);end end else if(cy<38)then local c c={}do if(#cs>0)then for g=1,#cs do local j j=cs[g]for g=0,#j do local m,cl,cm cl=j[g]do cm=cl[1]end do m=cl[2]end if(cm==h and m>=0)then c[m]=cm[m]cl[1]=c end end end end end return 0;else local c,g,j,m m=cp j,g=bq(h[m](cd(h,(m+1),co[114])))cr=(g+m-s)c=0 for g=m,cr do c=(c+1);h[g]=j[c];end;end end end else if not(co[191]<33)then do if(cy>33)then h[cp]=(p[cx]+h[co[56]]);else h[cp][h[co[114]]]=h[cv];end end else do h[cp]=h[co[114]][h[cv]];end end end else if not(cy<29)then if not(co[191]<30)then if 30==co[191]then h[cp]=#h[cx];else local c c=cp h[c]=h[c](h[c+1]);end else h[cp]=bc(cn[cx],nil,o);end else do if not(cy<27)then if(cy<28)then h[cp]=o[p[cx]];else local c,g,j g=co[90]j={h[g](cd(h,g+1,cr))}c=0 for m=g,co[56]do c=(c+1);h[m]=j[c];end end else h[co[90]]=(h[cx]*h[cv]);end end end end end else if not(cy>45)then if not(co[191]<42)then do if not(cy<44)then if(co[191]<45)then if(not(h[cp]~=p[co[56]]))then ct=cx;end;else local c,g,j,m do j=cp end m,c=bq(h[j](h[(j+1)]))do cr=(c+j-1)end g=0 for c=j,cr do g=(g+1);do h[c]=m[g];end end;end else if(cy<43)then h[cp]=(h[cx]%p[cv]);else local c,g,j g=cp j=h[g]do c=h[(g+2)]end if((c>0))then if((j>h[g+1]))then ct=co[114];else do h[(g+3)]=j;end end elseif((j<h[g+1]))then ct=cx;else do h[(g+3)]=j;end end end end end else if not(cy<40)then if not(cy~=40)then local c c=cp h[c]=h[c](cd(h,c+1,co[114]));else local c do c=cp end do h[c](h[(c+1)])end end else h[cp]=h[cx][p[cv]];end end else if not(cy>48)then do if not(cy>46)then do do return h[cp]end end else if not(cy~=47)then local c,g do c=cp end g={}do for j=1,#cs do local m m=cs[j]for j=r,#m do local o,r,s do o=m[j]end do s=o[1]end r=o[2]if(s==h and r>=c)then g[r]=s[r];do o[1]=g;end end;end;end;end else do h[cp]=(h[cx]+p[cv]);end end end end else do if not(co[191]<51)then if(cy<52)then h[cp]=(h[cx]-h[cv]);else local c c=cp do return h[c](cd(h,(c+1),cx))end;end else if(cy>49)then local c c=cp h[c]=h[c]();else while(h[cp]~=h[cv])do ct=cx;break end end end end end end end end ct=(ct+1);end;end end;end x=1192 else if x<1219 then x=1221 return bc(bt(bs()),{},bs())();else w=80;end end else if x<=1099 then x=1126 bt=function(c,g)local g,h,j,m,o,p,r,s=56,61,96,57,91,86,65,44,57,86,11,10,19,52,77,51,33,50,99,39,83,37,37,92,72 while g~=45 do if h<=273 then if h<=138 then if h<=81 then if h<73 then h=81 j,m,o,p,r,s=nil else h=102 o={}end else if h<136 then p={}h=138 else j={}h=179 end end else if h>=250 then if h>252 then do j[124]=p;end h=306 else for w=1,bv()do p[w-1]=bt();end h=273 end else if h>186 then for p=(#bo+1),(#bo+r)do local w,cl,cm,cn,co=86,76,10,24,13,60,98,79,97,26,82,78,46,14,92,78,81,91,92,65,81,18,19,65 while w~=53 do if cl<=294 then if cl<=148 then if cl>=124 then if cl<143 then co[158]=bl();cl=148 else cm=bv()cl=176 end else if cl<99 then cl=107 cm,cn,co=nil else cl=124 co={}end end else if cl>=256 then if cl>258 then cl=317 co[191]=bj(cn,1,11);else cl=294 co[132]=bj(cm,1,2);end else if cl>178 then co[115]=bl();cl=256 else cl=218 do cn=bv()end end end end else if cl<=416 then if cl<=361 then if cl>322 then cl=398 co[96]=bj(cm,12,20);else cl=361 co[90]=bj(cm,3,11);end else if cl>404 then do co[114]=bj(cn,12,33);end cl=465 else cl=416 co[56]=bj(cm,21,29);end end else if cl>=524 then if cl<565 then cl=572 bo[p]=co;else break end else if cl<502 then cl=507 co[55]=-co[90]else co[103]=-co[56]cl=524 end end end end end end h=250 else h=218 r=bv()end end end else if h>=443 then if h<=480 then if h<473 then h=480 j[89]=s else for p=1,bv()do local r,w,cl,cm,cn,co=75,57,40,96,93,43,88,30,89,87,77,56,37,59,54,83,60,85,61,51,59,54,77,38,78,15 while r~=37 do if w>=351 then if w>=451 then if w<=482 then if w>455 then cl[55]=-cl[90]w=509 else w=482 cl[115]=bj(cm,12,20);end else if w<=509 then w=543 do cl[103]=-cl[56]end else if w>550 then r=37;else w=565 o[p]=cl;end end end else if w>=402 then if w<415 then w=424 cl[114]=bj(cn,12,33);else cl[56]=bj(cm,21,29);w=451 end else if w<365 then w=369 cl[191]=bj(cn,1,11);else do cl[90]=bj(cm,3,11);end w=402 end end end else if w>=202 then if w<=232 then if w<226 then if not(bl()~=1)then for p=u,bl()do do cl[33][p]={bl()==0,bv()}end end end w=232 else cm=bv()w=263 end else if w<=263 then w=279 cn=bv()else if w>287 then cl[132]=co w=351 else co=bj(cm,1,2)w=316 end end end else if w>=129 then if w<164 then do cl[158]=bl();end w=171 else cl[33]={};w=202 end else if w>66 then w=129 cl={{},nil}else cl,cm,cn,co=nil w=96 end end end end end end h=502 end else if h<=502 then j[166]=o;h=525 else if h>533 then g=45;else h=541 return j;end end end else if h<=321 then if h<319 then j[63]=bl();h=321 else h=354 m=bv()end else if h<398 then h=400 s={}else h=443 for g=1,m do local h,j,m,o=38,66,21,48,60,98,12,21,92,50,28,27,88,50,62 while h~=25 do if j>=175 then if j<=175 then j=203 do if(not(m~=3))then o=(0~=bl());elseif(4==m)then o=bx();elseif(not(m~=0))then o=bf();elseif(2==m)then o=c[bf()];end;end else if j<243 then j=247 do s[g]=o;end else h=25;end end else if j>=99 then if j>102 then o=nil j=175 else j=141 m=bl()end else j=99 m,o=nil end end end end end end end end end end else if x<1145 then x=1149 be={}else x=1176 bw={}end end end end end else if x>=313 then if x<=468 then if x<=340 then if x>322 then x=382 bn=type else cb=select x=340 end else if x>=424 then if x<465 then x=468 cc=math.abs else cj=math.floor x=505 end else bz=(function(c,g)if not(bn(c)~='number')then return true else return false end end)x=424 end end else if x>=578 then if x<=578 then for c=0,255 do bp[c]=ch(c);end x=601 else if x<632 then x=637 ca=cifunction(c,g,g)return bp[bh(c,16)]end)else x=655 do bg={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,i,5,4,7,6,9,8,11,10,13,12,15,k,},{2,3,0,1,6,7,4,5,10,11,8,9,d,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,v,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,q,5,f,7,},{9,8,11,10,n,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,b,7,t,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,l,8,9,10,11,e,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{a,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil,nil}end end end else if x<=505 then x=534 cd=(unpack or table.unpack)else if x<552 then x=560 do bh=tonumber end else x=578 do bp={}end end end end end else if x<=151 then if x<=68 then if x<59 then x=68 y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=nil else x=104 ba=string.byte end else if x>=136 then if x<147 then bd=string.sub x=151 else x=179 ci=string.gsub end else x=136 ch=string.char end end else if x<=226 then if x<=179 then x=204 by=string.rep else if x<218 then x=226 bm=table.concat else x=241 bi=table.insert end end else if x<=241 then x=267 br=math.ldexp else if x<279 then x=283 bs=(getfenv or function()return _ENV end)else cf=setmetatable x=313 end end end end end end end end)(14,6,38,14,4,6,2,1,2,256,14,15,55,13,1,1,4,0,1,4,1,13)
